server {
	listen *:80;
	server_name registry.beaverhosting.fr;
	server_tokens off;
	return 301 https://$http_host$request_uri;
}

## Set a variable to help us decide if we need to add the
## 'Docker-Distribution-Api-Version' header
map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
	'' 'registry/2.0';
}

# main server block
server {
	server_name registry.beaverhosting.fr;

	listen 443 ssl;

	ssl_certificate /config/letsencrypt/letsencrypt/live/beaverhosting.fr/fullchain.pem;
	ssl_certificate_key /config/letsencrypt/letsencrypt/live/beaverhosting.fr/privkey.pem;
	ssl_dhparam /config/nginx/dhparams.pem;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
	ssl_prefer_server_ciphers on;
	ssl_session_cache builtin:1000 shared:SSL:10m;
	ssl_session_timeout 5m;

	client_max_body_size 0;
	chunked_transfer_encoding on;

	location /v2/ {

		if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$") {
			return 404;
		}
		
		auth_basic "Registry realm";
		auth_basic_user_file /config/nginx/htpasswd;

		add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

		proxy_pass http://registry:5000;
		proxy_set_header  Host $http_host;
		proxy_set_header  X-Real-IP $remote_addr;
		proxy_set_header  X-Forwarded-Proto $scheme;
		proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_read_timeout 900;
	}

}

